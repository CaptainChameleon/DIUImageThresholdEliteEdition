
import java.awt.Dimension;
import java.awt.Window;
import java.awt.image.BufferedImage;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Gabrilocu√°ntico
 */
public class ImageInternalFrame extends javax.swing.JInternalFrame {
    
    private boolean original = false;

    /**
     * Creates new form ImageInternalFrame
     */
    public ImageInternalFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPanel = new javax.swing.JScrollPane();
        imagePanel = new ImagePanel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 437, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 259, Short.MAX_VALUE)
        );

        scrollPanel.setViewportView(imagePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        if(isOriginal() && ((JDesktopPane) this.getParent()).getAllFrames().length > 1) {
            switch (exitConfirmationDialog()) {
                case JOptionPane.YES_OPTION:
                    disposeAllFrames();
                    break;
                case JOptionPane.NO_OPTION:
                    break;
                case JOptionPane.CANCEL_OPTION:
                    return;
            }
        } else if (isOriginal()) {
            //((AppFrame) this.getParent().getParent().getParent().getParent().getParent()).setThresholdtMenuItemEnabled(false); // This is ART, poetry made code
            ((AppFrame) this.getTopLevelAncestor()).setThresholdtMenuItemEnabled(false);
        }
        this.dispose();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ImagePanel imagePanel;
    private javax.swing.JScrollPane scrollPanel;
    // End of variables declaration//GEN-END:variables

    public void setImage(BufferedImage image) {
        this.imagePanel.setImage(image);
        this.setMaximumSize(new Dimension(image.getWidth(), image.getHeight()));
    }
    
    public BufferedImage getImage() {
        return this.imagePanel.getImage();
    }

    public void setOriginal(boolean original) {
        this.original = original;
    }
    
    public boolean isOriginal() {
        return original;
    }    

    private void disposeAllFrames() {
        JInternalFrame[] frames = ((JDesktopPane) this.getParent()).getAllFrames();
        for (JInternalFrame frame : frames) {
            if (frame != this) {
                frame.dispose();
            }
        }
    }
    
    
    private int exitConfirmationDialog(){
        int confirmDialog = JOptionPane.showConfirmDialog(rootPane,
                "Do you want to remove related threshold images too?",
                "",
                JOptionPane.YES_NO_CANCEL_OPTION);
        return confirmDialog;
    }
    
    
}
